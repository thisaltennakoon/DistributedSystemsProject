# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import route_pb2 as proto_dot_route__pb2


class serviceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.deleteIdentity = channel.unary_unary(
                '/service/deleteIdentity',
                request_serializer=proto_dot_route__pb2.DelIdRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.deleteRoom = channel.unary_unary(
                '/service/deleteRoom',
                request_serializer=proto_dot_route__pb2.DelRoomRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.identityApproval = channel.unary_unary(
                '/service/identityApproval',
                request_serializer=proto_dot_route__pb2.IdApprovalRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Approval.FromString,
                )
        self.roomApproval = channel.unary_unary(
                '/service/roomApproval',
                request_serializer=proto_dot_route__pb2.RoomApprovalRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.RoomApproval.FromString,
                )
        self.changeServerApproval = channel.unary_unary(
                '/service/changeServerApproval',
                request_serializer=proto_dot_route__pb2.ChangeServerApprovalRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.ChangeServerApproval.FromString,
                )
        self.sayHello = channel.unary_unary(
                '/service/sayHello',
                request_serializer=proto_dot_route__pb2.HelloRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.newIdentityByLeader = channel.unary_unary(
                '/service/newIdentityByLeader',
                request_serializer=proto_dot_route__pb2.NewIdentityRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.leaderElection = channel.unary_unary(
                '/service/leaderElection',
                request_serializer=proto_dot_route__pb2.LeaderElectionRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.createRoomByLeader = channel.unary_unary(
                '/service/createRoomByLeader',
                request_serializer=proto_dot_route__pb2.NewRoomRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )
        self.changeServerByLeader = channel.unary_unary(
                '/service/changeServerByLeader',
                request_serializer=proto_dot_route__pb2.ChangeServerRequest.SerializeToString,
                response_deserializer=proto_dot_route__pb2.Response.FromString,
                )


class serviceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def deleteIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def identityApproval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def roomApproval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeServerApproval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sayHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def newIdentityByLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaderElection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createRoomByLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeServerByLeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_serviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'deleteIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteIdentity,
                    request_deserializer=proto_dot_route__pb2.DelIdRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'deleteRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteRoom,
                    request_deserializer=proto_dot_route__pb2.DelRoomRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'identityApproval': grpc.unary_unary_rpc_method_handler(
                    servicer.identityApproval,
                    request_deserializer=proto_dot_route__pb2.IdApprovalRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Approval.SerializeToString,
            ),
            'roomApproval': grpc.unary_unary_rpc_method_handler(
                    servicer.roomApproval,
                    request_deserializer=proto_dot_route__pb2.RoomApprovalRequest.FromString,
                    response_serializer=proto_dot_route__pb2.RoomApproval.SerializeToString,
            ),
            'changeServerApproval': grpc.unary_unary_rpc_method_handler(
                    servicer.changeServerApproval,
                    request_deserializer=proto_dot_route__pb2.ChangeServerApprovalRequest.FromString,
                    response_serializer=proto_dot_route__pb2.ChangeServerApproval.SerializeToString,
            ),
            'sayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.sayHello,
                    request_deserializer=proto_dot_route__pb2.HelloRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'newIdentityByLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.newIdentityByLeader,
                    request_deserializer=proto_dot_route__pb2.NewIdentityRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'leaderElection': grpc.unary_unary_rpc_method_handler(
                    servicer.leaderElection,
                    request_deserializer=proto_dot_route__pb2.LeaderElectionRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'createRoomByLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.createRoomByLeader,
                    request_deserializer=proto_dot_route__pb2.NewRoomRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
            'changeServerByLeader': grpc.unary_unary_rpc_method_handler(
                    servicer.changeServerByLeader,
                    request_deserializer=proto_dot_route__pb2.ChangeServerRequest.FromString,
                    response_serializer=proto_dot_route__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def deleteIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/deleteIdentity',
            proto_dot_route__pb2.DelIdRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/deleteRoom',
            proto_dot_route__pb2.DelRoomRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def identityApproval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/identityApproval',
            proto_dot_route__pb2.IdApprovalRequest.SerializeToString,
            proto_dot_route__pb2.Approval.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def roomApproval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/roomApproval',
            proto_dot_route__pb2.RoomApprovalRequest.SerializeToString,
            proto_dot_route__pb2.RoomApproval.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changeServerApproval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/changeServerApproval',
            proto_dot_route__pb2.ChangeServerApprovalRequest.SerializeToString,
            proto_dot_route__pb2.ChangeServerApproval.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/sayHello',
            proto_dot_route__pb2.HelloRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def newIdentityByLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/newIdentityByLeader',
            proto_dot_route__pb2.NewIdentityRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def leaderElection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/leaderElection',
            proto_dot_route__pb2.LeaderElectionRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createRoomByLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/createRoomByLeader',
            proto_dot_route__pb2.NewRoomRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def changeServerByLeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/service/changeServerByLeader',
            proto_dot_route__pb2.ChangeServerRequest.SerializeToString,
            proto_dot_route__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
